# -*- coding: utf-8 -*-
"""
Created on Tue Jun 23 21:47:13 2020

@author: zhixia liu
"""

"""
Project Euler 12: Highly divisible triangular number

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

"""

#%% naive

triangular = 1
n = 1
m = 1
divisorlst = [1]
while len(divisorlst)<500:
    m=m+1
    n=n+m
    divisorlst = []
    for i in range(1,int(n**0.5)+1):
        if n%i == 0:
            divisorlst.append(i)
            divisorlst.append(n//i)
    if m%100000 == 0:
        print(n)
print(n)

# #%% construct from primelist
# from math import log2
# from sympy import prime
# n = int(log2(500))
# p = 1
# for i in range(1,n+1):
#     p *= prime(i)
# print(p)